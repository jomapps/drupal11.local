<?php

/**
 * @file
 * Test functionality.
 */

declare(strict_types=1);

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\FieldableEntityInterface;
use Drupal\Core\Entity\Routing\DefaultHtmlRouteProvider;
use Drupal\vgwort\Api\Webrange;

/**
 * Implements hook_vgwort_enable_for_entity().
 */
function vgwort_test_vgwort_enable_for_entity(EntityInterface $entity): bool {
  return !in_array($entity->id(), \Drupal::state()->get('vgwort_test_vgwort_enable_for_entity', []), TRUE);
}

/**
 * Implements hook_vgwort_queue_entity().
 */
function vgwort_test_vgwort_queue_entity(EntityInterface $entity): bool {
  return !in_array($entity->id(), \Drupal::state()->get('vgwort_test_vgwort_queue_entity', []), TRUE);
}

/**
 * Implements hook_entity_type_alter().
 */
function vgwort_test_entity_type_alter(array &$entity_types): void {
  // @todo Remove once minimum support Drupal version is greater or equal to
  //   10.1. This is fixed by https://drupal.org/i/2350939.
  if (!empty($entity_types['entity_test_revpub'])) {
    $route_providers = $entity_types['entity_test_revpub']->getRouteProviderClasses();
    if (!isset($route_providers['html'])) {
      $route_providers['html'] = DefaultHtmlRouteProvider::class;
      $entity_types['entity_test_revpub']->setHandlerClass('route_provider', $route_providers);
      $entity_types['entity_test_revpub']->setLinkTemplate('canonical', '/entity_test_revpub/manage/{entity_test_revpub}');
    }
  }
}

/**
 * Implements hook_vgwort_new_message_alter().
 */
function vgwort_test_vgwort_new_message_alter(array &$data, EntityInterface $entity): void {
  if (\Drupal::state()->get('vgwort_test_vgwort_new_message_alter', FALSE)) {
    $data['without_own_participation'] = TRUE;
    $data['webranges'] = [new Webrange(['http://decoupled_site.example.com/' . $entity->uuid()])];
    $data['legal_rights']['other_public_communication'] = TRUE;
  }
}

/**
 * Implements hook_vgwort_new_message_alter().
 */
function vgwort_test_vgwort_entity_counter_id_field(EntityInterface $entity): ?string {
  assert($entity instanceof FieldableEntityInterface, 'The entity is fieldable');
  return \Drupal::state()->get('vgwort_test_vgwort_entity_counter_id_field');
}

/**
 * Implements hook_entity_insert().
 */
function vgwort_test_entity_insert(EntityInterface $entity): void {
  vgwort_test_entity_update($entity);
}

/**
 * Implements hook_entity_update().
 */
function vgwort_test_entity_update(EntityInterface $entity): void {
  static $recursion = FALSE;
  if (\Drupal::state()->get('vgwort_test_entity_save_in_entity_save') && !$recursion) {
    $recursion = TRUE;
    $entity->save();
    $recursion = FALSE;
  }
}
